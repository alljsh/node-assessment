{"version":3,"sources":["test.js"],"names":["t","plan","get","expect","res","is","status","deepEqual","body","truthy","req","forEach","user","language","falsy","length","type","colLength","newUser","fakeUser","post","send","id","add","isArray","favorites","reduce","a","b","delete","true","age","city","state","gender","put","first_name","last_name","languages","types","faves","getRand","l","Math","floor","random","name","firstName","lastName","email","internet","address"],"mappings":"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","file":"test.js","sourcesContent":["import test from 'ava';\nimport request from 'supertest-as-promised';\nimport app from './server';\nimport Faker from 'faker';\nimport users from './users.json';\n\ntest('Get all users', async t=> {\n  t.plan(3)\n  const res = await request(app)\n    .get('/api/users')\n    .expect(200)\n\n  t.is(res.status, 200, 'Status is not 200');\n  t.deepEqual(res.body[0], users[0], \"No user returned\");\n  t.truthy(res.body, 'Something is wrong with the response body');\n})\n\ntest('Get user by language', async t => {\n  let req = await request(app)\n    .get('/api/users?language=klingon')\n    .expect(200)\n\n  t.truthy(req.body, 'Request body not found');\n\n  req.body.forEach(function(user) {\n    t.is(user.language, 'klingon')\n  })\n\n  req = await request(app)\n    .get('/api/users?language=french')\n    .expect(200)\n\n  t.truthy(req.body);\n\n  req.body.forEach(user => {\n    t.is(user.language, 'french');\n  })\n\n  req = await request(app)\n    .get('/api/users?language=foo')\n\n  t.is(req.status, 200);\n  t.falsy(req.body[0])\n})\n\ntest('Get user by privilege', async t => {\n  const req = await request(app)\n    .get('/api/users/admin')\n\n  t.plan(3+req.body.length);\n  t.is(req.status, 200);\n  t.truthy(req.body, 'Something is wrong with the request body');\n  t.truthy(req.body[0], 'No results returned');\n\n  req.body.forEach(user => {\n    t.is(user.type, 'admin')\n  });\n})\n\ntest('Create new user', async t => {\n  let colLength = users.length;\n  let newUser = fakeUser();\n  const req = await request(app)\n    .post('/api/users')\n    .send(newUser)\n\n  t.is(req.status, 200, 'Make sure you are using bodyParser');\n})\n\ntest('Create a new admin user', async t => {\n  let newUser = fakeUser();\n  const req = await request(app)\n    .post('/api/users/admin')\n    .send(newUser)\n\n  t.is(req.status, 200)\n})\n\ntest('Change a users language', async t => {\n  let newUser = fakeUser();\n  let id;\n  let req = await request(app)\n    .post('/api/users')\n    .send(newUser)\n\n  t.is(req.status, 200);\n  t.truthy(req.body.id);\n  id = req.body.id;\n\n  req = await request(app)\n    .post('/api/users/language/' + id)\n    .send({language: 'french'})\n\n  t.is(req.status, 200, 'error changing language');\n\n  req = await request(app)\n    .get('/api/users/' + id)\n\n  t.is(req.status, 200);\n  t.truthy(req.body.language);\n  t.is(req.body.language, 'french');\n\n  req = await request(app)\n    .post('/api/users/language/' + id)\n    .send({language: 'klingon'})\n\n  t.is(req.status, 200, 'error changing language to Klingon')\n\n  req = await request(app)\n    .get('/api/users/' + id)\n\n  t.is(req.status, 200);\n  t.truthy(req.body.language);\n  t.is(req.body.language, 'klingon');\n})\n\ntest('add to a users favorite forums', async t => {\n  let newUser = fakeUser();\n  let id;\n\n  // CREATE A NEW USER\n  let res = await request(app)\n    .post('/api/users')\n    .send(newUser)\n\n  t.is(res.status, 200);\n  t.truthy(res.body.id);\n  id = res.body.id;\n\n  // ADD TO FAVORITE FORUMS\n  res = await request(app)\n    .post('/api/users/forums/' + id)\n    .send({add: 'foo'})\n\n  t.is(res.status, 200);\n\n  // CHECK IF USER HAS NEW FORUM\n  res = await request(app)\n    .get('/api/users/' + id)\n\n  t.is(res.status, 200);\n  t.is(true, Array.isArray(res.body.favorites))\n\n  t.is(\n    true,\n    res.body.favorites.reduce((a, b) => {\n      if (b === 'foo') return true;\n      else return false;\n    }, false)\n  )\n\n})\n\ntest('remove from a users favorite forums', async t => {\n  let newUser = fakeUser();\n  let id;\n\n  // CREATE NEW FORUM\n  let res = await request(app)\n    .post('/api/users')\n\n  t.is(res.status, 200);\n  t.truthy(res.body.id);\n  id = res.body.id;\n\n  // ADD TO USER FORUMS\n  res = await request(app)\n    .post('/api/users/forums/' + id)\n    .send('foo')\n\n  t.is(res.status, 200);\n\n  // Remove from user forums\n  res = await request(app)\n    .delete('/api/users/forums/' + id + '?favorite=foo')\n\n  t.is(res.status, 200);\n\n  // Check that forum has been deleted\n  res = await request(app)\n    .get('/api/users/' + id);\n\n  t.is(res.status, 200);\n  t.true(Array.isArray(res.body.favorites));\n\n  res.body.favorites.reduce((a,b) => {\n    return b !== 'foo';\n  }, false)\n})\n\ntest('ban(delete) a user', async t => {\n  let user = fakeUser();\n\n  // Create a new user\n  let res = await request(app)\n    .post('/api/users')\n    .send(user)\n\n  t.is(res.status, 200);\n  t.truthy(res.body.id);\n  user.id = res.body.id;\n\n  // Delete that user\n  res = await request(app)\n    .delete('/api/users/' + user.id)\n\n  t.is(res.status, 200);\n\n  // Make sure user does not exist\n  res = await request(app)\n    .get('/api/users/' + user.id)\n\n  t.is(res.status, 404, 'Make sure that when a user is not found that the server returns 404');\n  t.truthy(res.body);\n  t.falsy(res.body[0], 'User still exists, delete endpoint is not working');\n\n})\n\ntest('Use queries for get all users', async t => {\n  // age\n  let res = await request(app)\n    .get('/api/users?age=49')\n\n  t.is(res.status, 200);\n  t.truthy(res.body);\n  res.body.forEach(user => {\n    t.true(user.age == 49, 'Age query failed')\n  })\n\n  // Location\n  res = await request(app)\n    .get('/api/users?language=english')\n\n  t.is(res.status, 200);\n  t.truthy(res.body);\n  t.truthy(res.body[0], 'Nothing returned from language query');\n  res.body.forEach(user => {\n    t.true(user.language === 'english', 'Language query failed');\n  })\n\n  // City\n  res = await request(app)\n    .get('/api/users?city=scranton')\n\n  t.is(res.status, 200);\n  t.truthy(res.body);\n  t.truthy(res.body[0], 'Nothing returned from city query');\n\n  res.body.forEach(user => {\n    t.true(user.city == 'Scranton', 'City query failed')\n  })\n\n  // State\n  res = await request(app)\n    .get('/api/users?state=pennsylvania')\n\n  t.is(res.status, 200);\n  t.truthy(res.body);\n  t.truthy(res.body[0], 'Nothing returned from state query');\n\n  res.body.forEach(user => {\n    t.true(user.state == 'Pennsylvania', 'State query failed')\n  })\n\n  // Gender\n  res = await request(app)\n    .get('/api/users?gender=female')\n\n  t.is(res.status, 200);\n  t.truthy(res.body);\n  t.truthy(res.body[0], 'Nothing returned from gender query');\n\n  res.body.forEach(user => {\n    t.true(user.gender == 'Female');\n  })\n})\n\ntest('Update one user', async t => {\n  let user = fakeUser();\n\n  let res = await request(app)\n    .post('/api/users')\n\n  t.is(res.status, 200);\n  t.truthy(res.body.id);\n  user.id = res.body.id;\n\n  // Update user\n  res = await request(app)\n    .put('/api/users/' + user.id)\n    .send({\n      first_name: 'foo',\n      last_name: 'bar'\n    })\n\n  t.is(res.status, 200, 'Check that put endpoint exists');\n\n  // Check that update was successful\n  res = await request(app)\n    .get('/api/users/' + user.id)\n\n  t.is(res.status, 200);\n  t.truthy(res.body);\n  t.is(res.body.first_name, 'foo', 'User was not changed');\n  t.is(res.body.last_name, 'bar', 'User was not changed');\n\n})\n\n\n\n\n\n\nfunction fakeUser() {\n  let languages = ['english', 'french', 'spanish', 'klingon'];\n  let types = ['admin', 'moderator', 'user'];\n  let faves = ['cats', 'dogs', 'angular'];\n  function getRand(l) {\n    return Math.floor(Math.random() * l);\n  }\n  return {\n    first_name: Faker.name.firstName(),\n    last_name: Faker.name.lastName(),\n    email: Faker.internet.email(),\n    gender: Math.random() >= .5 ? \"Male\" : \"Female\",\n    language: languages[getRand(languages.length)],\n    age: Math.floor(Math.random() * 70) + 20,\n    city: Faker.address.city(),\n    state: Faker.address.state(),\n    type: types[getRand(types.length)],\n    favorites: faves[getRand(faves.length)]\n  }\n}\n"]}